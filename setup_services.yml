- name: Install and configure Jenkins and Nexus
  hosts: all
  tasks:
    - name: Ensure Python is installed
      raw: sudo apt update && sudo apt install -y python3

- name: Setup Jenkins on master
  hosts: jenkins
  become: yes
  tasks:
    - name: Install Java 17 on jenkins server
      apt:
        name: openjdk-17-jdk
        state: present
        update_cache: yes

    - name: Add Jenkins repository key
      shell: |
        curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
      become: yes

    - name: Add Jenkins repository to sources list
      shell: |
        echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | tee /etc/apt/sources.list.d/jenkins.list > /dev/null
      become: yes

    - name: Update apt repository cache
      apt:
        update_cache: yes
      become: yes

    - name: Install Jenkins on jenkins server
      apt:
        name: jenkins
        state: present
        update_cache: yes
      become: yes

    - name: Start and enable Jenkins service
      systemd:
        name: jenkins
        state: started
        enabled: yes
      become: yes

- name: Setup Nexus on nexus
  hosts: nexus
  become: yes
  tasks:
    - name: Ensure nexus user exists
      user: 
        name: nexus
        state: present
        shell: /bin/bash

    - name: Install Java 11 on Nexus server
      apt:
        name: openjdk-11-jdk
        state: present
        update_cache: yes

    - name: Set JAVA_HOME and INSTALL4J_JAVA_HOME environment variables for nexus user
      blockinfile:
        path: /home/nexus/.bashrc
        block: |
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          export INSTALL4J_JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        state: present

    - name: Apply JAVA_HOME and INSTALL4J_JAVA_HOME for current session
      shell: |
        export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        export INSTALL4J_JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
        echo $JAVA_HOME
        echo $INSTALL4J_JAVA_HOME
      args:
        executable: /bin/bash

    - name: Download Nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /tmp/nexus.tar.gz
        mode: '0644'
        timeout: 300
      retries: 3
      delay: 10

    - name: Extract Nexus
      unarchive:
        src: /tmp/nexus.tar.gz
        dest: /opt/
        remote_src: yes

    - name: Move extracted Nexus directory to /opt/nexus
      shell: |
        extracted_dir=$(ls -d /opt/nexus-*)
        if [ -n "$extracted_dir" ]; then
          mv "$extracted_dir"/* /opt/nexus/
          rm -rf "$extracted_dir"
        else
          echo "Nexus directory not found after extraction" >&2
          exit 1
        fi
      args:
        executable: /bin/bash

    - name: Ensure Nexus directories exist with correct permissions
      file:
        path: "{{ item }}"
        state: directory
        owner: nexus
        group: nexus
        recurse: yes
      loop:
        - /opt/nexus
        - /opt/sonatype-work

    - name: Update Nexus permissions script
      lineinfile:
        path: /opt/nexus/bin/nexus
        regexp: '^#run_as_user=""'
        line: 'run_as_user="nexus"'

    - name: Create Nexus service file
      copy:
        dest: /etc/systemd/system/nexus.service
        content: |
          [Unit]
          Description=Nexus Repository Manager
          After=network.target
          
          [Service]
          Type=forking
          User=nexus
          Group=nexus
          ExecStart=/opt/nexus/bin/nexus start
          ExecStop=/opt/nexus/bin/nexus stop
          Restart=on-failure
          Environment=JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          Environment=INSTALL4J_JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          Environment=PATH=/usr/lib/jvm/java-11-openjdk-amd64/bin:$PATH

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd
      command: systemctl daemon-reload

    - name: Start and enable Nexus service
      systemd:
        name: nexus
        state: started
        enabled: yes
