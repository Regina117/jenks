- name: Install and configure Jenkins and Nexus
  hosts: all
  tasks:
    - name: Ensure Python is installed
      raw: sudo apt update && sudo apt install -y python3

- name: Setup Jenkins on master
  hosts: jenkins
  become: yes
  tasks:
    - name: Install Java 17 on jenkins server
      apt:
        name: openjdk-17-jdk
        state: present
        update_cache: yes

    - name: Add Jenkins repository key
      shell: |
        curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
      become: yes

    - name: Add Jenkins repository to sources list
      shell: |
        echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | tee /etc/apt/sources.list.d/jenkins.list > /dev/null
      become: yes

    - name: Update apt repository cache
      apt:
        update_cache: yes
      become: yes

    - name: Install Jenkins on jenkins server
      apt:
        name: jenkins
        state: present
        update_cache: yes
      become: yes

    - name: Start and enable Jenkins service
      systemd:
        name: jenkins
        state: started
        enabled: yes
      become: yes


- name: Install and configure Nexus
  hosts: nexus
  become: true

  vars:
    nexus_version: "nexus-3.76.0-03"
    nexus_url: "https://download.sonatype.com/nexus/3/latest-unix.tar.gz"
    nexus_install_dir: "/opt"
    nexus_user: "nexus"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600 

    - name: Install OpenJDK 8
      apt:
        name: openjdk-8-jre-headless
        state: present
        
    - name: Install docker
      apt:
        name: 
        - docker.io
        - docker-compose
        state: present

    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes    

    - name: Download Nexus
      get_url:
        url: "{{ nexus_url }}"
        dest: "{{ nexus_install_dir }}/{{ nexus_version }}.tar.gz"

    - name: Extract Nexus archive
      unarchive:
        src: "{{ nexus_install_dir }}/{{ nexus_version }}.tar.gz"
        dest: "{{ nexus_install_dir }}"
        remote_src: yes

    - name: Rename Nexus directory
      command: mv "{{ nexus_install_dir }}/{{ nexus_version }}" "{{ nexus_install_dir }}/nexus"
      args:
        creates: "{{ nexus_install_dir }}/nexus"

    - name: Add Nexus user
      user:
        name: "{{ nexus_user }}"
        home: "{{ nexus_install_dir }}/nexus"
        shell: /bin/bash
        create_home: no

    - name: Allow Nexus user passwordless sudo
      lineinfile:
        path: /etc/sudoers
        line: "{{ nexus_user }} ALL=(ALL) NOPASSWD: ALL"
        validate: "/usr/sbin/visudo -cf %s"

    - name: Change ownership of Nexus directories
      file:
        path: "{{ item }}"
        owner: "{{ nexus_user }}"
        group: "{{ nexus_user }}"
        recurse: yes
      loop:
        - "{{ nexus_install_dir }}/nexus"
        - "{{ nexus_install_dir }}/sonatype-work"

    - name: Configure Nexus to run as nexus user
      lineinfile:
        path: "{{ nexus_install_dir }}/nexus/bin/nexus.rc"
        line: "run_as_user={{ nexus_user }}"

    - name: Configure Nexus JVM options
      blockinfile:
        path: "{{ nexus_install_dir }}/nexus/bin/nexus.vmoptions"
        block: |
          -XX:MaxDirectMemorySize=1024m

    - name: Create Nexus systemd service
      copy:
        dest: /etc/systemd/system/nexus.service
        content: |
          [Unit]
          Description=nexus service
          After=network.target

          [Service]
          Type=forking
          LimitNOFILE=65536
          ExecStart={{ nexus_install_dir }}/nexus/bin/nexus start
          ExecStop={{ nexus_install_dir }}/nexus/bin/nexus stop
          User={{ nexus_user }}
          Restart=on-abort

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Enable Nexus service
      systemd:
        name: nexus
        enabled: yes

    - name: Start Nexus service
      systemd:
        name: nexus
        state: started

    - name: Check Nexus service status
      systemd:
        name: nexus
        state: started
        enabled: yes

- name: Install and configure Prod
  hosts: prod
  become: true
  
  tasks: 
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600 
          
    - name: Install app
      apt:
        name: 
        - openjdk-11-jdk
        - docker.io
        - tomcat9
        - tomcat9-admin
        state: present
        update_cache: yes

    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes     

    - name: Ensure tomcat service is running
      systemd:
        name: tomcat9
        state: started
        enabled: yes        




